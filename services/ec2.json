{
    "actions": [
        {
            "access_level": "Write",
            "action": "AcceptReservedInstancesExchangeQuote",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to accept a Convertible Reserved Instance exchange quote",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "AcceptTransitGatewayPeeringAttachment",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to accept a transit gateway peering attachment request",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway-attachment",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "AcceptTransitGatewayVpcAttachment",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to accept a request to attach a VPC to a transit gateway",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway-attachment",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "AcceptVpcEndpointConnections",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to accept one or more interface VPC endpoint connections to your VPC endpoint service",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc-endpoint-service",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "AcceptVpcPeeringConnection",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Tenancy",
                "aws:ResourceTag/${TagKey}",
                "ec2:AccepterVpc",
                "ec2:Region",
                "ec2:RequesterVpc",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to accept a VPC peering connection request",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc",
                    "required": true
                },
                {
                    "name": "vpc-peering-connection",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "AdvertiseByoipCidr",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to advertise an IP address range that is provisioned for use in AWS through bring your own IP addresses (BYOIP)",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "AllocateAddress",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to allocate an Elastic IP address (EIP) to your account",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "AllocateHosts",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to allocate a Dedicated Host to your account",
            "permission_only": false,
            "resources": [
                {
                    "name": "dedicated-host",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ApplySecurityGroupsToClientVpnTargetNetwork",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to apply a security group to the association between a Client VPN endpoint and a target network",
            "permission_only": false,
            "resources": [
                {
                    "name": "client-vpn-endpoint",
                    "required": true
                },
                {
                    "name": "security-group",
                    "required": true
                },
                {
                    "name": "vpc",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "AssignIpv6Addresses",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to assign one or more IPv6 addresses to a network interface",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "AssignPrivateIpAddresses",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to assign one or more secondary private IP addresses to a network interface",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "AssociateAddress",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to associate an Elastic IP address (EIP) with an instance or a network interface",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "AssociateClientVpnTargetNetwork",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to associate a target network with a Client VPN endpoint",
            "permission_only": false,
            "resources": [
                {
                    "name": "client-vpn-endpoint",
                    "required": true
                },
                {
                    "name": "subnet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "AssociateDhcpOptions",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to associate or disassociate a set of DHCP options with a VPC",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "AssociateIamInstanceProfile",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:EbsOptimized",
                "ec2:InstanceProfile",
                "ec2:InstanceType",
                "ec2:PlacementGroup",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:RootDeviceType",
                "ec2:Tenancy"
            ],
            "dependent_actions": [
                "iam:PassRole"
            ],
            "description": "Grants permission to associate an IAM instance profile with a running or stopped instance",
            "permission_only": false,
            "resources": [
                {
                    "name": "instance",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "AssociateRouteTable",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to associate a subnet or gateway with a route table",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "AssociateSubnetCidrBlock",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to associate a CIDR block with a subnet",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "AssociateTransitGatewayMulticastDomain",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to associate an attachment and list of subnets with a transit gateway multicast domain",
            "permission_only": false,
            "resources": [
                {
                    "name": "subnet",
                    "required": true
                },
                {
                    "name": "transit-gateway-attachment",
                    "required": true
                },
                {
                    "name": "transit-gateway-multicast-domain",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "AssociateTransitGatewayRouteTable",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to associate an attachment with a transit gateway route table",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway-attachment",
                    "required": true
                },
                {
                    "name": "transit-gateway-route-table",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "AssociateVpcCidrBlock",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to associate a CIDR block with a VPC",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "AttachClassicLinkVpc",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:EbsOptimized",
                "ec2:InstanceProfile",
                "ec2:InstanceType",
                "ec2:PlacementGroup",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:RootDeviceType",
                "ec2:Tenancy",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "description": "Grants permission to link an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of the VPC's security groups",
            "permission_only": false,
            "resources": [
                {
                    "name": "instance",
                    "required": true
                },
                {
                    "name": "security-group",
                    "required": true
                },
                {
                    "name": "vpc",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "AttachInternetGateway",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to attach an internet gateway to a VPC",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "AttachNetworkInterface",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to attach a network interface to an instance",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "AttachVolume",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:EbsOptimized",
                "ec2:InstanceProfile",
                "ec2:InstanceType",
                "ec2:PlacementGroup",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:RootDeviceType",
                "ec2:Tenancy",
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:Encrypted",
                "ec2:ParentSnapshot",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:VolumeIops",
                "ec2:VolumeSize",
                "ec2:VolumeType"
            ],
            "dependent_actions": [],
            "description": "Grants permission to attach an EBS volume to a running or stopped instance and expose it to the instance with the specified device name",
            "permission_only": false,
            "resources": [
                {
                    "name": "instance",
                    "required": true
                },
                {
                    "name": "volume",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "AttachVpnGateway",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to attach a virtual private gateway to a VPC",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "AuthorizeClientVpnIngress",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to add an inbound authorization rule to a Client VPN endpoint",
            "permission_only": false,
            "resources": [
                {
                    "name": "client-vpn-endpoint",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "AuthorizeSecurityGroupEgress",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc"
            ],
            "dependent_actions": [],
            "description": "Grants permission to add one or more outbound rules to a VPC security group",
            "permission_only": false,
            "resources": [
                {
                    "name": "security-group",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "AuthorizeSecurityGroupIngress",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc"
            ],
            "dependent_actions": [],
            "description": "Grants permission to add one or more inbound rules to a security group",
            "permission_only": false,
            "resources": [
                {
                    "name": "security-group",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "BundleInstance",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to bundle an instance store-backed Windows instance",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CancelBundleTask",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to cancel a bundling operation",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CancelCapacityReservation",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to cancel a Capacity Reservation and release the reserved capacity",
            "permission_only": false,
            "resources": [
                {
                    "name": "capacity-reservation",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CancelConversionTask",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to cancel an active conversion task",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CancelExportTask",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to cancel an active export task",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CancelImportTask",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to cancel an in-process import virtual machine or import snapshot task",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CancelReservedInstancesListing",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to cancel a Reserved Instance listing on the Reserved Instance Marketplace",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CancelSpotFleetRequests",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to cancel one or more Spot Fleet requests",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CancelSpotInstanceRequests",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to cancel one or more Spot Instance requests",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ConfirmProductInstance",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to determine whether an owned product code is associated with an instance",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CopyFpgaImage",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to copy a source Amazon FPGA image (AFI) to the current Region",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CopyImage",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to copy an Amazon Machine Image (AMI) from a source Region to the current Region",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CopySnapshot",
            "condition_keys": [
                "aws:TagKeys",
                "aws:RequestTag/${TagKey}",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to copy a point-in-time snapshot of an EBS volume and store it in Amazon S3",
            "permission_only": false,
            "resources": [
                {
                    "name": "snapshot",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateCapacityReservation",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a Capacity Reservation",
            "permission_only": false,
            "resources": [
                {
                    "name": "capacity-reservation",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateCarrierGateway",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a carrier gateway and provides CSP connectivity to VPC customers.",
            "permission_only": false,
            "resources": [
                {
                    "name": "carrier-gateway",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateClientVpnEndpoint",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a Client VPN endpoint",
            "permission_only": false,
            "resources": [
                {
                    "name": "client-vpn-endpoint",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateClientVpnRoute",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to add a network route to a Client VPN endpoint's route table",
            "permission_only": false,
            "resources": [
                {
                    "name": "client-vpn-endpoint",
                    "required": true
                },
                {
                    "name": "subnet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateCustomerGateway",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to create a customer gateway, which provides information to AWS about your customer gateway device",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateDefaultSubnet",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to create a default subnet in a specified Availability Zone in a default VPC",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateDefaultVpc",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to create a default VPC with a default subnet in each Availability Zone",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateDhcpOptions",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a set of DHCP options for a VPC",
            "permission_only": false,
            "resources": [
                {
                    "name": "dhcp-options",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateEgressOnlyInternetGateway",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create an egress-only internet gateway for a VPC",
            "permission_only": false,
            "resources": [
                {
                    "name": "egress-only-internet-gateway",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateFleet",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to launch an EC2 Fleet",
            "permission_only": false,
            "resources": [
                {
                    "name": "fleet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateFlowLogs",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Subnet",
                "ec2:Vpc",
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Tenancy"
            ],
            "dependent_actions": [
                "iam:PassRole"
            ],
            "description": "Grants permission to create one or more flow logs to capture IP traffic for a network interface",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc-flow-log",
                    "required": true
                },
                {
                    "name": "network-interface",
                    "required": false
                },
                {
                    "name": "subnet",
                    "required": false
                },
                {
                    "name": "vpc",
                    "required": false
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateFpgaImage",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create an Amazon FPGA Image (AFI) from a design checkpoint (DCP)",
            "permission_only": false,
            "resources": [
                {
                    "name": "fpga-image",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateImage",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to create an Amazon EBS-backed AMI from a stopped or running Amazon EBS-backed instance",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateInstanceExportTask",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to export a running or stopped instance to an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "export-instance-task",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateInternetGateway",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create an internet gateway for a VPC",
            "permission_only": false,
            "resources": [
                {
                    "name": "internet-gateway",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateKeyPair",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a 2048-bit RSA key pair",
            "permission_only": false,
            "resources": [
                {
                    "name": "key-pair",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateLaunchTemplate",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a launch template",
            "permission_only": false,
            "resources": [
                {
                    "name": "launch-template",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateLaunchTemplateVersion",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a new version of a launch template",
            "permission_only": false,
            "resources": [
                {
                    "name": "launch-template",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateLocalGatewayRoute",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a static route for a local gateway route table",
            "permission_only": false,
            "resources": [
                {
                    "name": "local-gateway-route-table",
                    "required": true
                },
                {
                    "name": "local-gateway-virtual-interface-group",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateLocalGatewayRouteTableVpcAssociation",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "description": "Grants permission to associate a VPC with a local gateway route table",
            "permission_only": false,
            "resources": [
                {
                    "name": "local-gateway-route-table",
                    "required": true
                },
                {
                    "name": "local-gateway-route-table-vpc-association",
                    "required": true
                },
                {
                    "name": "vpc",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateManagedPrefixList",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a managed prefix list",
            "permission_only": false,
            "resources": [
                {
                    "name": "prefix-list",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateNatGateway",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a NAT gateway in a subnet",
            "permission_only": false,
            "resources": [
                {
                    "name": "natgateway",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateNetworkAcl",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a network ACL in a VPC",
            "permission_only": false,
            "resources": [
                {
                    "name": "network-acl",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateNetworkAclEntry",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to create a numbered entry (a rule) in a network ACL",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateNetworkInterface",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a network interface in a subnet",
            "permission_only": false,
            "resources": [
                {
                    "name": "network-interface",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Permissions management",
            "action": "CreateNetworkInterfacePermission",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AuthorizedUser",
                "ec2:AvailabilityZone",
                "ec2:Permission",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Subnet",
                "ec2:Vpc",
                "ec2:AuthorizedService"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a permission for an AWS-authorized user to perform certain operations on a network interface",
            "permission_only": false,
            "resources": [
                {
                    "name": "network-interface",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreatePlacementGroup",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a placement group",
            "permission_only": false,
            "resources": [
                {
                    "name": "placement-group",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateReservedInstancesListing",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to create a listing for Standard Reserved Instances to be sold in the Reserved Instance Marketplace",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateRoute",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a route in a VPC route table",
            "permission_only": false,
            "resources": [
                {
                    "name": "route-table",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateRouteTable",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to create a route table for a VPC",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateSecurityGroup",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a security group",
            "permission_only": false,
            "resources": [
                {
                    "name": "security-group",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateSnapshot",
            "condition_keys": [
                "aws:TagKeys",
                "aws:RequestTag/${TagKey}",
                "ec2:ParentVolume",
                "ec2:Region",
                "aws:ResourceTag/${TagKey}",
                "ec2:Encrypted",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:VolumeIops",
                "ec2:VolumeSize",
                "ec2:VolumeType"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a snapshot of an EBS volume and store it in Amazon S3",
            "permission_only": false,
            "resources": [
                {
                    "name": "snapshot",
                    "required": true
                },
                {
                    "name": "volume",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateSnapshots",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:EbsOptimized",
                "ec2:InstanceProfile",
                "ec2:InstanceType",
                "ec2:PlacementGroup",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:RootDeviceType",
                "ec2:Tenancy",
                "aws:TagKeys",
                "aws:RequestTag/${TagKey}",
                "ec2:ParentVolume",
                "ec2:Region",
                "aws:ResourceTag/${TagKey}",
                "ec2:Encrypted",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:VolumeIops",
                "ec2:VolumeSize",
                "ec2:VolumeType"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create crash-consistent snapshots of multiple EBS volumes and store them in Amazon S3",
            "permission_only": false,
            "resources": [
                {
                    "name": "instance",
                    "required": true
                },
                {
                    "name": "snapshot",
                    "required": true
                },
                {
                    "name": "volume",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateSpotDatafeedSubscription",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to create a data feed for Spot Instances to view Spot Instance usage logs",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateSubnet",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a subnet in a VPC",
            "permission_only": false,
            "resources": [
                {
                    "name": "subnet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Tagging",
            "action": "CreateTags",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Owner",
                "ec2:Public",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:ImageType",
                "ec2:Owner",
                "ec2:Public",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:RootDeviceType",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:AvailabilityZone",
                "ec2:EbsOptimized",
                "ec2:InstanceProfile",
                "ec2:InstanceType",
                "ec2:PlacementGroup",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:RootDeviceType",
                "ec2:Tenancy",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:AvailabilityZone",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Subnet",
                "ec2:Vpc",
                "ec2:AssociatePublicIpAddress",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:AvailabilityZone",
                "ec2:InstanceType",
                "ec2:Region",
                "ec2:ReservedInstancesOfferingType",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Tenancy",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Owner",
                "ec2:ParentVolume",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:SnapshotTime",
                "ec2:VolumeSize",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:AvailabilityZone",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:AvailabilityZone",
                "ec2:Encrypted",
                "ec2:ParentSnapshot",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:VolumeIops",
                "ec2:VolumeSize",
                "ec2:VolumeType",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Tenancy",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:CreateAction"
            ],
            "dependent_actions": [],
            "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
            "permission_only": false,
            "resources": [
                {
                    "name": "capacity-reservation",
                    "required": false
                },
                {
                    "name": "client-vpn-endpoint",
                    "required": false
                },
                {
                    "name": "dedicated-host",
                    "required": false
                },
                {
                    "name": "dhcp-options",
                    "required": false
                },
                {
                    "name": "egress-only-internet-gateway",
                    "required": false
                },
                {
                    "name": "export-instance-task",
                    "required": false
                },
                {
                    "name": "fleet",
                    "required": false
                },
                {
                    "name": "fpga-image",
                    "required": false
                },
                {
                    "name": "image",
                    "required": false
                },
                {
                    "name": "instance",
                    "required": false
                },
                {
                    "name": "internet-gateway",
                    "required": false
                },
                {
                    "name": "local-gateway",
                    "required": false
                },
                {
                    "name": "local-gateway-route-table",
                    "required": false
                },
                {
                    "name": "local-gateway-route-table-virtual-interface-group-association",
                    "required": false
                },
                {
                    "name": "local-gateway-route-table-vpc-association",
                    "required": false
                },
                {
                    "name": "local-gateway-virtual-interface",
                    "required": false
                },
                {
                    "name": "local-gateway-virtual-interface-group",
                    "required": false
                },
                {
                    "name": "natgateway",
                    "required": false
                },
                {
                    "name": "network-acl",
                    "required": false
                },
                {
                    "name": "network-interface",
                    "required": false
                },
                {
                    "name": "reserved-instances",
                    "required": false
                },
                {
                    "name": "route-table",
                    "required": false
                },
                {
                    "name": "security-group",
                    "required": false
                },
                {
                    "name": "snapshot",
                    "required": false
                },
                {
                    "name": "spot-instance-request",
                    "required": false
                },
                {
                    "name": "subnet",
                    "required": false
                },
                {
                    "name": "traffic-mirror-filter",
                    "required": false
                },
                {
                    "name": "traffic-mirror-session",
                    "required": false
                },
                {
                    "name": "traffic-mirror-target",
                    "required": false
                },
                {
                    "name": "transit-gateway",
                    "required": false
                },
                {
                    "name": "transit-gateway-attachment",
                    "required": false
                },
                {
                    "name": "transit-gateway-multicast-domain",
                    "required": false
                },
                {
                    "name": "transit-gateway-route-table",
                    "required": false
                },
                {
                    "name": "volume",
                    "required": false
                },
                {
                    "name": "vpc",
                    "required": false
                },
                {
                    "name": "vpc-endpoint",
                    "required": false
                },
                {
                    "name": "vpc-endpoint-service",
                    "required": false
                },
                {
                    "name": "vpc-flow-log",
                    "required": false
                },
                {
                    "name": "vpn-connection",
                    "required": false
                },
                {
                    "name": "vpn-gateway",
                    "required": false
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateTrafficMirrorFilter",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a traffic mirror filter",
            "permission_only": false,
            "resources": [
                {
                    "name": "traffic-mirror-filter",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateTrafficMirrorFilterRule",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a traffic mirror filter rule",
            "permission_only": false,
            "resources": [
                {
                    "name": "traffic-mirror-filter",
                    "required": true
                },
                {
                    "name": "traffic-mirror-filter-rule",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateTrafficMirrorSession",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a traffic mirror session",
            "permission_only": false,
            "resources": [
                {
                    "name": "network-interface",
                    "required": true
                },
                {
                    "name": "traffic-mirror-filter",
                    "required": true
                },
                {
                    "name": "traffic-mirror-session",
                    "required": true
                },
                {
                    "name": "traffic-mirror-target",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateTrafficMirrorTarget",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a traffic mirror target",
            "permission_only": false,
            "resources": [
                {
                    "name": "traffic-mirror-target",
                    "required": true
                },
                {
                    "name": "network-interface",
                    "required": false
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateTransitGateway",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a transit gateway",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateTransitGatewayMulticastDomain",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a multicast domain for a transit gateway",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway",
                    "required": true
                },
                {
                    "name": "transit-gateway-multicast-domain",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateTransitGatewayPeeringAttachment",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to request a transit gateway peering attachment between a requester and accepter transit gateway",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway",
                    "required": true
                },
                {
                    "name": "transit-gateway-attachment",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateTransitGatewayPrefixListReference",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a transit gateway prefix list reference",
            "permission_only": false,
            "resources": [
                {
                    "name": "prefix-list",
                    "required": true
                },
                {
                    "name": "transit-gateway-route-table",
                    "required": true
                },
                {
                    "name": "transit-gateway-attachment",
                    "required": false
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateTransitGatewayRoute",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a static route for a transit gateway route table",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway-route-table",
                    "required": true
                },
                {
                    "name": "transit-gateway-attachment",
                    "required": false
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateTransitGatewayRouteTable",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a route table for a transit gateway",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway",
                    "required": true
                },
                {
                    "name": "transit-gateway-route-table",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateTransitGatewayVpcAttachment",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to attach a VPC to a transit gateway",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway",
                    "required": true
                },
                {
                    "name": "transit-gateway-attachment",
                    "required": true
                },
                {
                    "name": "vpc",
                    "required": true
                },
                {
                    "name": "subnet",
                    "required": false
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateVolume",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:AvailabilityZone",
                "ec2:Encrypted",
                "ec2:ParentSnapshot",
                "ec2:Region",
                "ec2:VolumeIops",
                "ec2:VolumeSize",
                "ec2:VolumeType"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create an EBS volume",
            "permission_only": false,
            "resources": [
                {
                    "name": "volume",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateVpc",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a VPC with a specified CIDR block",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateVpcEndpoint",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:VpceServiceName",
                "ec2:VpceServiceOwner",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [
                "route53:AssociateVPCWithHostedZone"
            ],
            "description": "Grants permission to create a VPC endpoint for an AWS service",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc",
                    "required": true
                },
                {
                    "name": "vpc-endpoint",
                    "required": true
                },
                {
                    "name": "route-table",
                    "required": false
                },
                {
                    "name": "security-group",
                    "required": false
                },
                {
                    "name": "subnet",
                    "required": false
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateVpcEndpointConnectionNotification",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to create a connection notification for a VPC endpoint or VPC endpoint service",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateVpcEndpointServiceConfiguration",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:VpceServicePrivateDnsName"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a VPC endpoint service configuration to which service consumers (AWS accounts, IAM users, and IAM roles) can connect",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc-endpoint-service",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateVpcPeeringConnection",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Tenancy",
                "ec2:AccepterVpc",
                "ec2:Region",
                "ec2:RequesterVpc"
            ],
            "dependent_actions": [],
            "description": "Grants permission to request a VPC peering connection between two VPCs",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc",
                    "required": true
                },
                {
                    "name": "vpc-peering-connection",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateVpnConnection",
            "condition_keys": [
                "ec2:Region",
                "ec2:AuthenticationType",
                "ec2:DPDTimeoutSeconds",
                "ec2:GatewayType",
                "ec2:IKEVersions",
                "ec2:InsideTunnelCidr",
                "ec2:Phase1DHGroupNumbers",
                "ec2:Phase2DHGroupNumbers",
                "ec2:Phase1EncryptionAlgorithms",
                "ec2:Phase2EncryptionAlgorithms",
                "ec2:Phase1IntegrityAlgorithms",
                "ec2:Phase2IntegrityAlgorithms",
                "ec2:Phase1LifetimeSeconds",
                "ec2:Phase2LifetimeSeconds",
                "ec2:PresharedKeys",
                "ec2:RekeyFuzzPercentage",
                "ec2:RekeyMarginTimeSeconds",
                "ec2:RoutingType"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a VPN connection between a virtual private gateway or transit gateway and a customer gateway",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpn-connection",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateVpnConnectionRoute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to create a static route for a VPN connection between a virtual private gateway and a customer gateway",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateVpnGateway",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to create a virtual private gateway",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeleteCarrierGateway",
            "condition_keys": [
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a carrier gateway",
            "permission_only": false,
            "resources": [
                {
                    "name": "carrier-gateway",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteClientVpnEndpoint",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a Client VPN endpoint",
            "permission_only": false,
            "resources": [
                {
                    "name": "client-vpn-endpoint",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteClientVpnRoute",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a route from a Client VPN endpoint",
            "permission_only": false,
            "resources": [
                {
                    "name": "client-vpn-endpoint",
                    "required": true
                },
                {
                    "name": "subnet",
                    "required": false
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteCustomerGateway",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a customer gateway",
            "permission_only": false,
            "resources": [
                {
                    "name": "customer-gateway",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteDhcpOptions",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a set of DHCP options",
            "permission_only": false,
            "resources": [
                {
                    "name": "dhcp-options",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteEgressOnlyInternetGateway",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to delete an egress-only internet gateway",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeleteFleets",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to delete one or more EC2 Fleets",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeleteFlowLogs",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete one or more flow logs",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc-flow-log",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteFpgaImage",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to delete an Amazon FPGA Image (AFI)",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeleteInternetGateway",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete an internet gateway",
            "permission_only": false,
            "resources": [
                {
                    "name": "internet-gateway",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteKeyPair",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to delete a key pair by removing the public key from Amazon EC2",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeleteLaunchTemplate",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a launch template and its associated versions",
            "permission_only": false,
            "resources": [
                {
                    "name": "launch-template",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteLaunchTemplateVersions",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete one or more versions of a launch template",
            "permission_only": false,
            "resources": [
                {
                    "name": "launch-template",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteLocalGatewayRoute",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a route from a local gateway route table",
            "permission_only": false,
            "resources": [
                {
                    "name": "local-gateway-route-table",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteLocalGatewayRouteTableVpcAssociation",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete an association between a VPC and local gateway route table",
            "permission_only": false,
            "resources": [
                {
                    "name": "local-gateway-route-table-vpc-association",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteManagedPrefixList",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a managed prefix list",
            "permission_only": false,
            "resources": [
                {
                    "name": "prefix-list",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteNatGateway",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to delete a NAT gateway",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeleteNetworkAcl",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a network ACL",
            "permission_only": false,
            "resources": [
                {
                    "name": "network-acl",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteNetworkAclEntry",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete an inbound or outbound entry (rule) from a network ACL",
            "permission_only": false,
            "resources": [
                {
                    "name": "network-acl",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteNetworkInterface",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to delete a detached network interface",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Permissions management",
            "action": "DeleteNetworkInterfacePermission",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to delete a permission that is associated with a network interface",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeletePlacementGroup",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to delete a placement group",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeleteRoute",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a route from a route table",
            "permission_only": false,
            "resources": [
                {
                    "name": "route-table",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteRouteTable",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a route table",
            "permission_only": false,
            "resources": [
                {
                    "name": "route-table",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteSecurityGroup",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a security group",
            "permission_only": false,
            "resources": [
                {
                    "name": "security-group",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteSnapshot",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Owner",
                "ec2:ParentVolume",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:SnapshotTime",
                "ec2:VolumeSize"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a snapshot of an EBS volume",
            "permission_only": false,
            "resources": [
                {
                    "name": "snapshot",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteSpotDatafeedSubscription",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to delete a data feed for Spot Instances",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeleteSubnet",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to delete a subnet",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Tagging",
            "action": "DeleteTags",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
            "permission_only": false,
            "resources": [
                {
                    "name": "capacity-reservation",
                    "required": false
                },
                {
                    "name": "client-vpn-endpoint",
                    "required": false
                },
                {
                    "name": "dedicated-host",
                    "required": false
                },
                {
                    "name": "dhcp-options",
                    "required": false
                },
                {
                    "name": "egress-only-internet-gateway",
                    "required": false
                },
                {
                    "name": "export-instance-task",
                    "required": false
                },
                {
                    "name": "fleet",
                    "required": false
                },
                {
                    "name": "fpga-image",
                    "required": false
                },
                {
                    "name": "image",
                    "required": false
                },
                {
                    "name": "instance",
                    "required": false
                },
                {
                    "name": "internet-gateway",
                    "required": false
                },
                {
                    "name": "local-gateway",
                    "required": false
                },
                {
                    "name": "local-gateway-route-table",
                    "required": false
                },
                {
                    "name": "local-gateway-route-table-virtual-interface-group-association",
                    "required": false
                },
                {
                    "name": "local-gateway-route-table-vpc-association",
                    "required": false
                },
                {
                    "name": "local-gateway-virtual-interface",
                    "required": false
                },
                {
                    "name": "local-gateway-virtual-interface-group",
                    "required": false
                },
                {
                    "name": "natgateway",
                    "required": false
                },
                {
                    "name": "network-acl",
                    "required": false
                },
                {
                    "name": "network-interface",
                    "required": false
                },
                {
                    "name": "reserved-instances",
                    "required": false
                },
                {
                    "name": "route-table",
                    "required": false
                },
                {
                    "name": "security-group",
                    "required": false
                },
                {
                    "name": "snapshot",
                    "required": false
                },
                {
                    "name": "spot-instance-request",
                    "required": false
                },
                {
                    "name": "subnet",
                    "required": false
                },
                {
                    "name": "transit-gateway",
                    "required": false
                },
                {
                    "name": "transit-gateway-attachment",
                    "required": false
                },
                {
                    "name": "transit-gateway-multicast-domain",
                    "required": false
                },
                {
                    "name": "transit-gateway-route-table",
                    "required": false
                },
                {
                    "name": "volume",
                    "required": false
                },
                {
                    "name": "vpc",
                    "required": false
                },
                {
                    "name": "vpc-endpoint",
                    "required": false
                },
                {
                    "name": "vpc-endpoint-service",
                    "required": false
                },
                {
                    "name": "vpc-flow-log",
                    "required": false
                },
                {
                    "name": "vpn-connection",
                    "required": false
                },
                {
                    "name": "vpn-gateway",
                    "required": false
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteTrafficMirrorFilter",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a traffic mirror filter",
            "permission_only": false,
            "resources": [
                {
                    "name": "traffic-mirror-filter",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteTrafficMirrorFilterRule",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a traffic mirror filter rule",
            "permission_only": false,
            "resources": [
                {
                    "name": "traffic-mirror-filter",
                    "required": true
                },
                {
                    "name": "traffic-mirror-filter-rule",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteTrafficMirrorSession",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a traffic mirror session",
            "permission_only": false,
            "resources": [
                {
                    "name": "traffic-mirror-session",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteTrafficMirrorTarget",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a traffic mirror target",
            "permission_only": false,
            "resources": [
                {
                    "name": "traffic-mirror-target",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteTransitGateway",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a transit gateway",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteTransitGatewayMulticastDomain",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permissions to delete a transit gateway multicast domain",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway-multicast-domain",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteTransitGatewayPeeringAttachment",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a peering attachment from a transit gateway",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway-attachment",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteTransitGatewayPrefixListReference",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a transit gateway prefix list reference",
            "permission_only": false,
            "resources": [
                {
                    "name": "prefix-list",
                    "required": true
                },
                {
                    "name": "transit-gateway-route-table",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteTransitGatewayRoute",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a route from a transit gateway route table",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway-route-table",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteTransitGatewayRouteTable",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a transit gateway route table",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway-route-table",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteTransitGatewayVpcAttachment",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a VPC attachment from a transit gateway",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway-attachment",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteVolume",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:Encrypted",
                "ec2:ParentSnapshot",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:VolumeIops",
                "ec2:VolumeSize",
                "ec2:VolumeType"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete an EBS volume",
            "permission_only": false,
            "resources": [
                {
                    "name": "volume",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteVpc",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to delete a VPC",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeleteVpcEndpointConnectionNotifications",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to delete one or more VPC endpoint connection notifications",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeleteVpcEndpointServiceConfigurations",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete one or more VPC endpoint service configurations",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc-endpoint-service",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteVpcEndpoints",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete one or more VPC endpoints",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc-endpoint",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteVpcPeeringConnection",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AccepterVpc",
                "ec2:Region",
                "ec2:RequesterVpc",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete a VPC peering connection",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc-peering-connection",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteVpnConnection",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to delete a VPN connection",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeleteVpnConnectionRoute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to delete a static route for a VPN connection between a virtual private gateway and a customer gateway",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeleteVpnGateway",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to delete a virtual private gateway",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeprovisionByoipCidr",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to release an IP address range that was provisioned through bring your own IP addresses (BYOIP), and to delete the corresponding address pool",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeregisterImage",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to deregister an Amazon Machine Image (AMI)",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeregisterInstanceEventNotificationAttributes",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to remove tags from the set of tags to include in notifications about scheduled events for your instances",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeregisterTransitGatewayMulticastGroupMembers",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to deregister one or more network interface members from a group IP address in a transit gateway multicast domain",
            "permission_only": false,
            "resources": [
                {
                    "name": "network-interface",
                    "required": true
                },
                {
                    "name": "transit-gateway-multicast-domain",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeregisterTransitGatewayMulticastGroupSources",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to deregister one or more network interface sources from a group IP address in a transit gateway multicast domain",
            "permission_only": false,
            "resources": [
                {
                    "name": "network-interface",
                    "required": true
                },
                {
                    "name": "transit-gateway-multicast-domain",
                    "required": true
                }
            ]
        },
        {
            "access_level": "List",
            "action": "DescribeAccountAttributes",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the attributes of the AWS account",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeAddresses",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more Elastic IP addresses",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeAggregateIdFormat",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the longer ID format settings for all resource types",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeAvailabilityZones",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more of the Availability Zones that are available to you",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeBundleTasks",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more bundling tasks",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeByoipCidrs",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the IP address ranges that were provisioned through bring your own IP addresses (BYOIP)",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeCapacityReservations",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more Capacity Reservations",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeCarrierGateways",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more Carrier Gateways",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeClassicLinkInstances",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more linked EC2-Classic instances",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeClientVpnAuthorizationRules",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the authorization rules for a Client VPN endpoint",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeClientVpnConnections",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe active client connections and connections that have been terminated within the last 60 minutes for a Client VPN endpoint",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeClientVpnEndpoints",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more Client VPN endpoints",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeClientVpnRoutes",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the routes for a Client VPN endpoint",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeClientVpnTargetNetworks",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the target networks that are associated with a Client VPN endpoint",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeCoipPools",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the specified customer-owned address pools or all of your customer-owned address pools",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeConversionTasks",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more conversion tasks",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeCustomerGateways",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more customer gateways",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeDhcpOptions",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more DHCP options sets",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeEgressOnlyInternetGateways",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more egress-only internet gateways",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeElasticGpus",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe an Elastic Graphics accelerator that is associated with an instance",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeExportImageTasks",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more export image tasks",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeExportTasks",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more export instance tasks",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeFastSnapshotRestores",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the state of fast snapshot restores for snapshots",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeFleetHistory",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the events for an EC2 Fleet during a specified time",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeFleetInstances",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the running instances for an EC2 Fleet",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeFleets",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more EC2 Fleets",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeFlowLogs",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more flow logs",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeFpgaImageAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the attributes of an Amazon FPGA Image (AFI)",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeFpgaImages",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more Amazon FPGA Images (AFIs)",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeHostReservationOfferings",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the Dedicated Host Reservations that are available to purchase",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeHostReservations",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the Dedicated Host Reservations that are associated with Dedicated Hosts in the AWS account",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeHosts",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more Dedicated Hosts",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeIamInstanceProfileAssociations",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the IAM instance profile associations",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeIdFormat",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the ID format settings for resources",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeIdentityIdFormat",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the ID format settings for resources for an IAM user, IAM role, or root user",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeImageAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe an attribute of an Amazon Machine Image (AMI)",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeImages",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more images (AMIs, AKIs, and ARIs)",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeImportImageTasks",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe import virtual machine or import snapshot tasks",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeImportSnapshotTasks",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe import snapshot tasks",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeInstanceAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the attributes of an instance",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeInstanceCreditSpecifications",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the credit option for CPU usage of one or more burstable performance instances",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeInstanceEventNotificationAttributes",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the set of tags to include in notifications about scheduled events for your instances",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeInstanceStatus",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the status of one or more instances",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeInstanceTypeOfferings",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the set of instance types that are offered in a location",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeInstanceTypes",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the details of instance types that are offered in a location",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeInstances",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more instances",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeInternetGateways",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more internet gateways",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeKeyPairs",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more key pairs",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeLaunchTemplateVersions",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more launch template versions",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeLaunchTemplates",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more launch templates",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the associations between virtual interface groups and local gateway route tables",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeLocalGatewayRouteTableVpcAssociations",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe an association between VPCs and local gateway route tables",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeLocalGatewayRouteTables",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more local gateway route tables",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeLocalGatewayVirtualInterfaceGroups",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe local gateway virtual interface groups",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeLocalGatewayVirtualInterfaces",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe local gateway virtual interfaces",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeLocalGateways",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more local gateways",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeManagedPrefixLists",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe your managed prefix lists and any AWS-managed prefix lists",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeMovingAddresses",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe Elastic IP addresses that are being moved to the EC2-VPC platform",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeNatGateways",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more NAT gateways",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeNetworkAcls",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more network ACLs",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeNetworkInterfaceAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe a network interface attribute",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeNetworkInterfacePermissions",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the permissions that are associated with a network interface",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeNetworkInterfaces",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more network interfaces",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribePlacementGroups",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more placement groups",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribePrefixLists",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe available AWS services in a prefix list format",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribePrincipalIdFormat",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the ID format settings for the root user and all IAM roles and IAM users that have explicitly specified a longer ID (17-character ID) preference",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribePublicIpv4Pools",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more IPv4 address pools",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeRegions",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more AWS Regions that are currently available in your account",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeReservedInstances",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more purchased Reserved Instances in your account",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeReservedInstancesListings",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe your account's Reserved Instance listings in the Reserved Instance Marketplace",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeReservedInstancesModifications",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the modifications made to one or more Reserved Instances",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeReservedInstancesOfferings",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the Reserved Instance offerings that are available for purchase",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeRouteTables",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more route tables",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeScheduledInstanceAvailability",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to find available schedules for Scheduled Instances",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeScheduledInstances",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more Scheduled Instances in your account",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeSecurityGroupReferences",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the VPCs on the other side of a VPC peering connection that are referencing specified VPC security groups",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeSecurityGroups",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more security groups",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeSnapshotAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe an attribute of a snapshot",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeSnapshots",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more EBS snapshots",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeSpotDatafeedSubscription",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the data feed for Spot Instances",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeSpotFleetInstances",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the running instances for a Spot Fleet",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeSpotFleetRequestHistory",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the events for a Spot Fleet request during a specified time",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeSpotFleetRequests",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more Spot Fleet requests",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeSpotInstanceRequests",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more Spot Instance requests",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeSpotPriceHistory",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the Spot Instance price history",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeStaleSecurityGroups",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the stale security group rules for security groups in a specified VPC",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeSubnets",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more subnets",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeTags",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more tags for an Amazon EC2 resource",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeTrafficMirrorFilters",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more traffic mirror filters",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeTrafficMirrorSessions",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more traffic mirror sessions",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeTrafficMirrorTargets",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more traffic mirror targets",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeTransitGatewayAttachments",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more attachments between resources and transit gateways",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeTransitGatewayMulticastDomains",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more transit gateway multicast domains",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeTransitGatewayPeeringAttachments",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more transit gateway peering attachments",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeTransitGatewayRouteTables",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more transit gateway route tables",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeTransitGatewayVpcAttachments",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more VPC attachments on a transit gateway",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeTransitGateways",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more transit gateways",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeVolumeAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe an attribute of an EBS volume",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeVolumeStatus",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the status of one or more EBS volumes",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeVolumes",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more EBS volumes",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeVolumesModifications",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the current modification status of one or more EBS volumes",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeVpcAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe an attribute of a VPC",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeVpcClassicLink",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the ClassicLink status of one or more VPCs",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeVpcClassicLinkDnsSupport",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the ClassicLink DNS support status of one or more VPCs",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeVpcEndpointConnectionNotifications",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the connection notifications for VPC endpoints and VPC endpoint services",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeVpcEndpointConnections",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the VPC endpoint connections to your VPC endpoint services",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeVpcEndpointServiceConfigurations",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe VPC endpoint service configurations (your services)",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeVpcEndpointServicePermissions",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the principals (service consumers) that are permitted to discover your VPC endpoint service",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeVpcEndpointServices",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe all supported AWS services that can be specified when creating a VPC endpoint",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeVpcEndpoints",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more VPC endpoints",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeVpcPeeringConnections",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more VPC peering connections",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeVpcs",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more VPCs",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeVpnConnections",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more VPN connections",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "DescribeVpnGateways",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe one or more virtual private gateways",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DetachClassicLinkVpc",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:EbsOptimized",
                "ec2:InstanceProfile",
                "ec2:InstanceType",
                "ec2:PlacementGroup",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:RootDeviceType",
                "ec2:Tenancy",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "description": "Grants permission to unlink (detach) a linked EC2-Classic instance from a VPC",
            "permission_only": false,
            "resources": [
                {
                    "name": "instance",
                    "required": true
                },
                {
                    "name": "vpc",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DetachInternetGateway",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to detach an internet gateway from a VPC",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DetachNetworkInterface",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to detach a network interface from an instance",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DetachVolume",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:EbsOptimized",
                "ec2:InstanceProfile",
                "ec2:InstanceType",
                "ec2:PlacementGroup",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:RootDeviceType",
                "ec2:Tenancy",
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:Encrypted",
                "ec2:ParentSnapshot",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:VolumeIops",
                "ec2:VolumeSize",
                "ec2:VolumeType"
            ],
            "dependent_actions": [],
            "description": "Grants permission to detach an EBS volume from an instance",
            "permission_only": false,
            "resources": [
                {
                    "name": "instance",
                    "required": true
                },
                {
                    "name": "volume",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DetachVpnGateway",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to detach a virtual private gateway from a VPC",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DisableEbsEncryptionByDefault",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to disable EBS encryption by default for your account",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DisableFastSnapshotRestores",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Owner",
                "ec2:ParentVolume",
                "ec2:Region",
                "ec2:AvailabilityZone",
                "ec2:SnapshotTime",
                "ec2:Encrypted",
                "ec2:VolumeSize",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to disable fast snapshot restores for one or more snapshots in specified Availability Zones",
            "permission_only": false,
            "resources": [
                {
                    "name": "snapshot",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DisableTransitGatewayRouteTablePropagation",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to disable a resource attachment from propagating routes to the specified propagation route table",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway-attachment",
                    "required": true
                },
                {
                    "name": "transit-gateway-route-table",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DisableVgwRoutePropagation",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to disable a virtual private gateway from propagating routes to a specified route table of a VPC",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DisableVpcClassicLink",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "description": "Grants permission to disable ClassicLink for a VPC",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DisableVpcClassicLinkDnsSupport",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to disable ClassicLink DNS support for a VPC",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DisassociateAddress",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to disassociate an Elastic IP address from an instance or network interface",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DisassociateClientVpnTargetNetwork",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to disassociate a target network from a Client VPN endpoint",
            "permission_only": false,
            "resources": [
                {
                    "name": "client-vpn-endpoint",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DisassociateIamInstanceProfile",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:EbsOptimized",
                "ec2:InstanceProfile",
                "ec2:InstanceType",
                "ec2:PlacementGroup",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:RootDeviceType",
                "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "description": "Grants permission to disassociate an IAM instance profile from a running or stopped instance",
            "permission_only": false,
            "resources": [
                {
                    "name": "instance",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DisassociateRouteTable",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to disassociate a subnet from a route table",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DisassociateSubnetCidrBlock",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to disassociate a CIDR block from a subnet",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DisassociateTransitGatewayMulticastDomain",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to disassociate one or more subnets from a transit gateway multicast domain",
            "permission_only": false,
            "resources": [
                {
                    "name": "subnet",
                    "required": true
                },
                {
                    "name": "transit-gateway-attachment",
                    "required": true
                },
                {
                    "name": "transit-gateway-multicast-domain",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DisassociateTransitGatewayRouteTable",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to disassociate a resource attachment from a transit gateway route table",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway-attachment",
                    "required": true
                },
                {
                    "name": "transit-gateway-route-table",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DisassociateVpcCidrBlock",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to disassociate a CIDR block from a VPC",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "EnableEbsEncryptionByDefault",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to enable EBS encryption by default for your account",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "EnableFastSnapshotRestores",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Owner",
                "ec2:ParentVolume",
                "ec2:Region",
                "ec2:AvailabilityZone",
                "ec2:SnapshotTime",
                "ec2:Encrypted",
                "ec2:VolumeSize",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to enable fast snapshot restores for one or more snapshots in specified Availability Zones",
            "permission_only": false,
            "resources": [
                {
                    "name": "snapshot",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "EnableTransitGatewayRouteTablePropagation",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to enable an attachment to propagate routes to a propagation route table",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway-attachment",
                    "required": true
                },
                {
                    "name": "transit-gateway-route-table",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "EnableVgwRoutePropagation",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to enable a virtual private gateway to propagate routes to a VPC route table",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "EnableVolumeIO",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to enable I/O operations for a volume that had I/O operations disabled",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "EnableVpcClassicLink",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "description": "Grants permission to enable a VPC for ClassicLink",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "EnableVpcClassicLinkDnsSupport",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to enable a VPC to support DNS hostname resolution for ClassicLink",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "ExportClientVpnClientCertificateRevocationList",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to download the client certificate revocation list for a Client VPN endpoint",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "ExportClientVpnClientConfiguration",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to download the contents of the Client VPN endpoint configuration file for a Client VPN endpoint",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ExportImage",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to export an Amazon Machine Image (AMI) to a VM file",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ExportTransitGatewayRoutes",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to export routes from a transit gateway route table to an Amazon S3 bucket",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "GetCapacityReservationUsage",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to get usage information about a Capacity Reservation",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "GetCoipPoolUsage",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe the allocations from the specified customer-owned address pool",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "GetConsoleOutput",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to get the console output for an instance",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "GetConsoleScreenshot",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:EbsOptimized",
                "ec2:InstanceProfile",
                "ec2:InstanceType",
                "ec2:PlacementGroup",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:RootDeviceType",
                "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "description": "Grants permission to retrieve a JPG-format screenshot of a running instance",
            "permission_only": false,
            "resources": [
                {
                    "name": "instance",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetDefaultCreditSpecification",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to get the default credit option for CPU usage of a burstable performance instance family",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "GetEbsDefaultKmsKeyId",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to get the ID of the default customer master key (CMK) for EBS encryption by default",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "GetEbsEncryptionByDefault",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to describe whether EBS encryption by default is enabled for your account",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "GetHostReservationPurchasePreview",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to preview a reservation purchase with configurations that match those of a Dedicated Host",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "GetLaunchTemplateData",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to get the configuration data of the specified instance for use with a new launch template or launch template version",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "GetManagedPrefixListAssociations",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to get information about the resources that are associated with the specified managed prefix list",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "GetManagedPrefixListEntries",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to get information about the entries for a specified managed prefix list",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "GetPasswordData",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to retrieve the encrypted administrator password for a running Windows instance",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "GetReservedInstancesExchangeQuote",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to return a quote and exchange information for exchanging one or more Convertible Reserved Instances for a new Convertible Reserved Instance",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "GetTransitGatewayAttachmentPropagations",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to list the route tables to which a resource attachment propagates routes",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "GetTransitGatewayMulticastDomainAssociations",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to get information about the associations for a transit gateway multicast domain",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "GetTransitGatewayPrefixListReferences",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to get information about prefix list references for a transit gateway route table",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "GetTransitGatewayRouteTableAssociations",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to get information about associations for a transit gateway route table",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "GetTransitGatewayRouteTablePropagations",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to get information about the route table propagations for a transit gateway route table",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ImportClientVpnClientCertificateRevocationList",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to upload a client certificate revocation list to a Client VPN endpoint",
            "permission_only": false,
            "resources": [
                {
                    "name": "client-vpn-endpoint",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ImportImage",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to import single or multi-volume disk images or EBS snapshots into an Amazon Machine Image (AMI)",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ImportInstance",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to create an import instance task using metadata from a disk image",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ImportKeyPair",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to import a public key from an RSA key pair that was created with a third-party tool",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ImportSnapshot",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to import a disk into an EBS snapshot",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ImportVolume",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to create an import volume task using metadata from a disk image",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyCapacityReservation",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to modify a Capacity Reservation's capacity and the conditions under which it is to be released",
            "permission_only": false,
            "resources": [
                {
                    "name": "capacity-reservation",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ModifyClientVpnEndpoint",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to modify a Client VPN endpoint",
            "permission_only": false,
            "resources": [
                {
                    "name": "client-vpn-endpoint",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ModifyDefaultCreditSpecification",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to change the account level default credit option for CPU usage of burstable performance instances",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyEbsDefaultKmsKeyId",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to change the default customer master key (CMK) for EBS encryption by default for your account",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyFleet",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify an EC2 Fleet",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyFpgaImageAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify an attribute of an Amazon FPGA Image (AFI)",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyHosts",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify a Dedicated Host",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyIdFormat",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify the ID format for a resource",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyIdentityIdFormat",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify the ID format of a resource for a specific principal in your account",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyImageAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify an attribute of an Amazon Machine Image (AMI)",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyInstanceAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify an attribute of an instance",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyInstanceCapacityReservationAttributes",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify the Capacity Reservation settings for a stopped instance",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyInstanceCreditSpecification",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify the credit option for CPU usage on an instance",
            "permission_only": false,
            "resources": [
                {
                    "name": "instance",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ModifyInstanceEventStartTime",
            "condition_keys": [
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to modify the start time for a scheduled EC2 instance event",
            "permission_only": false,
            "resources": [
                {
                    "name": "instance",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ModifyInstanceMetadataOptions",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify the metadata options for an instance",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyInstancePlacement",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify the placement attributes for an instance",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyLaunchTemplate",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to modify a launch template",
            "permission_only": false,
            "resources": [
                {
                    "name": "launch-template",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ModifyManagedPrefixList",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to modify a managed prefix list",
            "permission_only": false,
            "resources": [
                {
                    "name": "prefix-list",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ModifyNetworkInterfaceAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify an attribute of a network interface",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyReservedInstances",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify attributes of one or more Reserved Instances",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Permissions management",
            "action": "ModifySnapshotAttribute",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Owner",
                "ec2:ParentVolume",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:SnapshotTime",
                "ec2:VolumeSize"
            ],
            "dependent_actions": [],
            "description": "Grants permission to add or remove permission settings for a snapshot",
            "permission_only": false,
            "resources": [
                {
                    "name": "snapshot",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ModifySpotFleetRequest",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify a Spot Fleet request",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifySubnetAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify an attribute of a subnet",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyTrafficMirrorFilterNetworkServices",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to allow or restrict mirroring network services",
            "permission_only": false,
            "resources": [
                {
                    "name": "traffic-mirror-filter",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ModifyTrafficMirrorFilterRule",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Region"
            ],
            "dependent_actions": [],
            "description": "Grants permission to modify a traffic mirror rule",
            "permission_only": false,
            "resources": [
                {
                    "name": "traffic-mirror-filter",
                    "required": true
                },
                {
                    "name": "traffic-mirror-filter-rule",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ModifyTrafficMirrorSession",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to modify a traffic mirror session",
            "permission_only": false,
            "resources": [
                {
                    "name": "traffic-mirror-session",
                    "required": true
                },
                {
                    "name": "traffic-mirror-filter",
                    "required": false
                },
                {
                    "name": "traffic-mirror-target",
                    "required": false
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ModifyTransitGateway",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to modify a transit gateway",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ModifyTransitGatewayPrefixListReference",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to modify a transit gateway prefix list reference",
            "permission_only": false,
            "resources": [
                {
                    "name": "prefix-list",
                    "required": true
                },
                {
                    "name": "transit-gateway-route-table",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ModifyTransitGatewayVpcAttachment",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to modify a VPC attachment on a transit gateway",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway-attachment",
                    "required": true
                },
                {
                    "name": "subnet",
                    "required": false
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ModifyVolume",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify the parameters of an EBS volume",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyVolumeAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify an attribute of a volume",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyVpcAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify an attribute of a VPC",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyVpcEndpoint",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to modify an attribute of a VPC endpoint",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc-endpoint",
                    "required": true
                },
                {
                    "name": "route-table",
                    "required": false
                },
                {
                    "name": "security-group",
                    "required": false
                },
                {
                    "name": "subnet",
                    "required": false
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ModifyVpcEndpointConnectionNotification",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify a connection notification for a VPC endpoint or VPC endpoint service",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyVpcEndpointServiceConfiguration",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:VpceServicePrivateDnsName",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to modify the attributes of a VPC endpoint service configuration",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc-endpoint-service",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Permissions management",
            "action": "ModifyVpcEndpointServicePermissions",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to modify the permissions for a VPC endpoint service",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc-endpoint-service",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ModifyVpcPeeringConnectionOptions",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify the VPC peering connection options on one side of a VPC peering connection",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyVpcTenancy",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify the instance tenancy attribute of a VPC",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyVpnConnection",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:GatewayType"
            ],
            "dependent_actions": [],
            "description": "Grants permission to modify the target gateway of a Site-to-Site VPN connection",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpn-connection",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ModifyVpnTunnelCertificate",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to modify the certificate for a Site-to-Site VPN connection",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ModifyVpnTunnelOptions",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:AuthenticationType",
                "ec2:DPDTimeoutSeconds",
                "ec2:IKEVersions",
                "ec2:InsideTunnelCidr",
                "ec2:Phase1DHGroupNumbers",
                "ec2:Phase2DHGroupNumbers",
                "ec2:Phase1EncryptionAlgorithms",
                "ec2:Phase2EncryptionAlgorithms",
                "ec2:Phase1IntegrityAlgorithms",
                "ec2:Phase2IntegrityAlgorithms",
                "ec2:Phase1LifetimeSeconds",
                "ec2:Phase2LifetimeSeconds",
                "ec2:PresharedKeys",
                "ec2:RekeyFuzzPercentage",
                "ec2:RekeyMarginTimeSeconds",
                "ec2:RoutingType"
            ],
            "dependent_actions": [],
            "description": "Grants permission to modify the options for a Site-to-Site VPN connection",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpn-connection",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "MonitorInstances",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to enable detailed monitoring for a running instance",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "MoveAddressToVpc",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to move an Elastic IP address from the EC2-Classic platform to the EC2-VPC platform",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ProvisionByoipCidr",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to provision an address range for use in AWS through bring your own IP addresses (BYOIP), and to create a corresponding address pool",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "PurchaseHostReservation",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to purchase a reservation with configurations that match those of a Dedicated Host",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "PurchaseReservedInstancesOffering",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to purchase a Reserved Instance offering",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "PurchaseScheduledInstances",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to purchase one or more Scheduled Instances with a specified schedule",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "RebootInstances",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:EbsOptimized",
                "ec2:InstanceProfile",
                "ec2:InstanceType",
                "ec2:PlacementGroup",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:RootDeviceType",
                "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "description": "Grants permission to request a reboot of one or more instances",
            "permission_only": false,
            "resources": [
                {
                    "name": "instance",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "RegisterImage",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to register an Amazon Machine Image (AMI)",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "RegisterInstanceEventNotificationAttributes",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to add tags to the set of tags to include in notifications about scheduled events for your instances",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "RegisterTransitGatewayMulticastGroupMembers",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to register one or more network interfaces as a member of a group IP address in a transit gateway multicast domain",
            "permission_only": false,
            "resources": [
                {
                    "name": "network-interface",
                    "required": true
                },
                {
                    "name": "transit-gateway-multicast-domain",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "RegisterTransitGatewayMulticastGroupSources",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to register one or more network interfaces as a source of a group IP address in a transit gateway multicast domain",
            "permission_only": false,
            "resources": [
                {
                    "name": "network-interface",
                    "required": true
                },
                {
                    "name": "transit-gateway-multicast-domain",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "RejectTransitGatewayPeeringAttachment",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to reject a transit gateway peering attachment request",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway-attachment",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "RejectTransitGatewayVpcAttachment",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to reject a request to attach a VPC to a transit gateway",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway-attachment",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "RejectVpcEndpointConnections",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to reject one or more VPC endpoint connection requests to a VPC endpoint service",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc-endpoint-service",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "RejectVpcPeeringConnection",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AccepterVpc",
                "ec2:Region",
                "ec2:RequesterVpc",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to reject a VPC peering connection request",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc-peering-connection",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ReleaseAddress",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to release an Elastic IP address",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ReleaseHosts",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to release one or more On-Demand Dedicated Hosts",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ReplaceIamInstanceProfileAssociation",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:EbsOptimized",
                "ec2:InstanceProfile",
                "ec2:InstanceType",
                "ec2:PlacementGroup",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:RootDeviceType",
                "ec2:Tenancy"
            ],
            "dependent_actions": [
                "iam:PassRole"
            ],
            "description": "Grants permission to replace an IAM instance profile for an instance",
            "permission_only": false,
            "resources": [
                {
                    "name": "instance",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ReplaceNetworkAclAssociation",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to change which network ACL a subnet is associated with",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ReplaceNetworkAclEntry",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to replace an entry (rule) in a network ACL",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ReplaceRoute",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc"
            ],
            "dependent_actions": [],
            "description": "Grants permission to replace a route within a route table in a VPC",
            "permission_only": false,
            "resources": [
                {
                    "name": "route-table",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ReplaceRouteTableAssociation",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to change the route table that is associated with a subnet",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ReplaceTransitGatewayRoute",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to replace a route in a transit gateway route table",
            "permission_only": false,
            "resources": [
                {
                    "name": "transit-gateway-route-table",
                    "required": true
                },
                {
                    "name": "transit-gateway-attachment",
                    "required": false
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ReportInstanceStatus",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to submit feedback about the status of an instance",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "RequestSpotFleet",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to create a Spot Fleet request",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "RequestSpotInstances",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to create a Spot Instance request",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ResetEbsDefaultKmsKeyId",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to reset the default customer master key (CMK) for EBS encryption for your account to use the AWS-managed CMK for EBS",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ResetFpgaImageAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to reset an attribute of an Amazon FPGA Image (AFI) to its default value",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ResetImageAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to reset an attribute of an Amazon Machine Image (AMI) to its default value",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ResetInstanceAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to reset an attribute of an instance to its default value",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ResetNetworkInterfaceAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to reset an attribute of a network interface",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Permissions management",
            "action": "ResetSnapshotAttribute",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to reset permission settings for a snapshot",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "RestoreAddressToClassic",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to restore an Elastic IP address that was previously moved to the EC2-VPC platform back to the EC2-Classic platform",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "RestoreManagedPrefixListVersion",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to restore the entries from a previous version of a managed prefix list to a new version of the prefix list",
            "permission_only": false,
            "resources": [
                {
                    "name": "prefix-list",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "RevokeClientVpnIngress",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to remove an inbound authorization rule from a Client VPN endpoint",
            "permission_only": false,
            "resources": [
                {
                    "name": "client-vpn-endpoint",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "RevokeSecurityGroupEgress",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc"
            ],
            "dependent_actions": [],
            "description": "Grants permission to remove one or more outbound rules from a VPC security group",
            "permission_only": false,
            "resources": [
                {
                    "name": "security-group",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "RevokeSecurityGroupIngress",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc"
            ],
            "dependent_actions": [],
            "description": "Grants permission to remove one or more inbound rules from a security group",
            "permission_only": false,
            "resources": [
                {
                    "name": "security-group",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "RunInstances",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:ImageType",
                "ec2:IsLaunchTemplateResource",
                "ec2:LaunchTemplate",
                "ec2:Owner",
                "ec2:Public",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:RootDeviceType",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:AvailabilityZone",
                "ec2:EbsOptimized",
                "ec2:InstanceProfile",
                "ec2:InstanceType",
                "ec2:IsLaunchTemplateResource",
                "ec2:LaunchTemplate",
                "ec2:PlacementGroup",
                "ec2:Region",
                "ec2:RootDeviceType",
                "ec2:Tenancy",
                "ec2:MetadataHttpEndpoint",
                "ec2:MetadataHttpTokens",
                "ec2:MetadataHttpPutResponseHopLimit",
                "aws:ResourceTag/",
                "ec2:AvailabilityZone",
                "ec2:IsLaunchTemplateResource",
                "ec2:LaunchTemplate",
                "ec2:Region",
                "ec2:ResourceTag/",
                "ec2:Subnet",
                "ec2:Vpc",
                "ec2:AssociatePublicIpAddress",
                "aws:ResourceTag/${TagKey}",
                "ec2:IsLaunchTemplateResource",
                "ec2:LaunchTemplate",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc",
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:IsLaunchTemplateResource",
                "ec2:LaunchTemplate",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:AvailabilityZone",
                "ec2:Encrypted",
                "ec2:IsLaunchTemplateResource",
                "ec2:LaunchTemplate",
                "ec2:ParentSnapshot",
                "ec2:Region",
                "ec2:VolumeIops",
                "ec2:VolumeSize",
                "ec2:VolumeType",
                "aws:ResourceTag/${TagKey}",
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:ElasticGpuType",
                "ec2:IsLaunchTemplateResource",
                "ec2:LaunchTemplate",
                "ec2:Region",
                "ec2:IsLaunchTemplateResource",
                "ec2:LaunchTemplate",
                "ec2:Region",
                "ec2:IsLaunchTemplateResource",
                "ec2:LaunchTemplate",
                "ec2:PlacementGroupStrategy",
                "ec2:Region",
                "aws:ResourceTag/${TagKey}",
                "ec2:IsLaunchTemplateResource",
                "ec2:LaunchTemplate",
                "ec2:Owner",
                "ec2:ParentVolume",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:SnapshotTime",
                "ec2:VolumeSize"
            ],
            "dependent_actions": [],
            "description": "Grants permission to launch one or more instances",
            "permission_only": false,
            "resources": [
                {
                    "name": "image",
                    "required": true
                },
                {
                    "name": "instance",
                    "required": true
                },
                {
                    "name": "network-interface",
                    "required": true
                },
                {
                    "name": "security-group",
                    "required": true
                },
                {
                    "name": "subnet",
                    "required": true
                },
                {
                    "name": "volume",
                    "required": true
                },
                {
                    "name": "capacity-reservation",
                    "required": false
                },
                {
                    "name": "elastic-gpu",
                    "required": false
                },
                {
                    "name": "elastic-inference",
                    "required": false
                },
                {
                    "name": "key-pair",
                    "required": false
                },
                {
                    "name": "launch-template",
                    "required": false
                },
                {
                    "name": "placement-group",
                    "required": false
                },
                {
                    "name": "snapshot",
                    "required": false
                },
                {
                    "name": "image",
                    "required": true
                },
                {
                    "name": "instance",
                    "required": true
                },
                {
                    "name": "security-group",
                    "required": true
                },
                {
                    "name": "volume",
                    "required": true
                },
                {
                    "name": "key-pair",
                    "required": false
                },
                {
                    "name": "placement-group",
                    "required": false
                },
                {
                    "name": "snapshot",
                    "required": false
                },
                {
                    "name": "image",
                    "required": true
                },
                {
                    "name": "instance",
                    "required": true
                },
                {
                    "name": "security-group",
                    "required": true
                },
                {
                    "name": "key-pair",
                    "required": false
                },
                {
                    "name": "placement-group",
                    "required": false
                },
                {
                    "name": "snapshot",
                    "required": false
                },
                {
                    "name": "image",
                    "required": true
                },
                {
                    "name": "instance",
                    "required": true
                },
                {
                    "name": "network-interface",
                    "required": true
                },
                {
                    "name": "security-group",
                    "required": true
                },
                {
                    "name": "volume",
                    "required": true
                },
                {
                    "name": "key-pair",
                    "required": false
                },
                {
                    "name": "placement-group",
                    "required": false
                },
                {
                    "name": "snapshot",
                    "required": false
                },
                {
                    "name": "image",
                    "required": true
                },
                {
                    "name": "instance",
                    "required": true
                },
                {
                    "name": "network-interface",
                    "required": true
                },
                {
                    "name": "security-group",
                    "required": true
                },
                {
                    "name": "subnet",
                    "required": true
                },
                {
                    "name": "volume",
                    "required": true
                },
                {
                    "name": "key-pair",
                    "required": false
                },
                {
                    "name": "placement-group",
                    "required": false
                },
                {
                    "name": "snapshot",
                    "required": false
                },
                {
                    "name": "image",
                    "required": true
                },
                {
                    "name": "instance",
                    "required": true
                },
                {
                    "name": "network-interface",
                    "required": true
                },
                {
                    "name": "security-group",
                    "required": true
                },
                {
                    "name": "key-pair",
                    "required": false
                },
                {
                    "name": "placement-group",
                    "required": false
                },
                {
                    "name": "snapshot",
                    "required": false
                },
                {
                    "name": "image",
                    "required": true
                },
                {
                    "name": "instance",
                    "required": true
                },
                {
                    "name": "network-interface",
                    "required": true
                },
                {
                    "name": "security-group",
                    "required": true
                },
                {
                    "name": "subnet",
                    "required": true
                },
                {
                    "name": "key-pair",
                    "required": false
                },
                {
                    "name": "placement-group",
                    "required": false
                },
                {
                    "name": "snapshot",
                    "required": false
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "RunScheduledInstances",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to launch one or more Scheduled Instances",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "SearchLocalGatewayRoutes",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to search for routes in a local gateway route table",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "SearchTransitGatewayMulticastGroups",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to search for groups, sources, and members in a transit gateway multicast domain",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "SearchTransitGatewayRoutes",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to search for routes in a transit gateway route table",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "SendDiagnosticInterrupt",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:EbsOptimized",
                "ec2:InstanceProfile",
                "ec2:InstanceType",
                "ec2:PlacementGroup",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:RootDeviceType",
                "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "description": "Grants permission to send a diagnostic interrupt to an Amazon EC2 instance",
            "permission_only": false,
            "resources": [
                {
                    "name": "instance",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "StartInstances",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:EbsOptimized",
                "ec2:InstanceProfile",
                "ec2:InstanceType",
                "ec2:PlacementGroup",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:RootDeviceType",
                "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "description": "Grants permission to start a stopped instance",
            "permission_only": false,
            "resources": [
                {
                    "name": "instance",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "StartVpcEndpointServicePrivateDnsVerification",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to start the private DNS verification process for a VPC endpoint service",
            "permission_only": false,
            "resources": [
                {
                    "name": "vpc-endpoint-service",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "StopInstances",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:EbsOptimized",
                "ec2:InstanceProfile",
                "ec2:InstanceType",
                "ec2:PlacementGroup",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:RootDeviceType",
                "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "description": "Grants permission to stop an Amazon EBS-backed instance",
            "permission_only": false,
            "resources": [
                {
                    "name": "instance",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "TerminateClientVpnConnections",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to terminate active Client VPN endpoint connections",
            "permission_only": false,
            "resources": [
                {
                    "name": "client-vpn-endpoint",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "TerminateInstances",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:AvailabilityZone",
                "ec2:EbsOptimized",
                "ec2:InstanceProfile",
                "ec2:InstanceType",
                "ec2:PlacementGroup",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:RootDeviceType",
                "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "description": "Grants permission to shut down one or more instances",
            "permission_only": false,
            "resources": [
                {
                    "name": "instance",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "UnassignIpv6Addresses",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to unassign one or more IPv6 addresses from a network interface",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "UnassignPrivateIpAddresses",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to unassign one or more secondary private IP addresses from a network interface",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "UnmonitorInstances",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to disable detailed monitoring for a running instance",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "UpdateSecurityGroupRuleDescriptionsEgress",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc"
            ],
            "dependent_actions": [],
            "description": "Grants permission to update descriptions for one or more outbound rules in a VPC security group",
            "permission_only": false,
            "resources": [
                {
                    "name": "security-group",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "UpdateSecurityGroupRuleDescriptionsIngress",
            "condition_keys": [
                "aws:ResourceTag/${TagKey}",
                "ec2:Region",
                "ec2:ResourceTag/${TagKey}",
                "ec2:Vpc"
            ],
            "dependent_actions": [],
            "description": "Grants permission to update descriptions for one or more inbound rules in a security group",
            "permission_only": false,
            "resources": [
                {
                    "name": "security-group",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "WithdrawByoipCidr",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to stop advertising an address range that was provisioned for use in AWS through bring your own IP addresses (BYOIP)",
            "permission_only": false,
            "resources": []
        }
    ],
    "prefix": "ec2",
    "service": "Amazon EC2"
}