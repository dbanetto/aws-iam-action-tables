{
    "actions": [
        {
            "access_level": "Write",
            "action": "AcceptMatch",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Registers player acceptance or rejection of a proposed FlexMatch match.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "ClaimGameServer",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Locates and reserves a game server to host a new game session.",
            "permission_only": false,
            "resources": [
                {
                    "name": "gameServerGroup",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateAlias",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys"
            ],
            "dependent_actions": [],
            "description": "Defines a new alias for a fleet.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateBuild",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys"
            ],
            "dependent_actions": [],
            "description": "Creates a new game build using files stored in an Amazon S3 bucket.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateFleet",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys"
            ],
            "dependent_actions": [],
            "description": "Creates a new fleet of computing resources to run your game servers.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateGameServerGroup",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys"
            ],
            "dependent_actions": [],
            "description": "Creates a new game server group, sets up a corresponding Auto Scaling group, and launches instances to host game servers.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateGameSession",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Starts a new game session on a specified fleet.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateGameSessionQueue",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys"
            ],
            "dependent_actions": [],
            "description": "Sets up a new queue for processing new game session placement requests.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateMatchmakingConfiguration",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys"
            ],
            "dependent_actions": [],
            "description": "Creates a new FlexMatch matchmaker.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateMatchmakingRuleSet",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys"
            ],
            "dependent_actions": [],
            "description": "Creates a new matchmaking rule set for FlexMatch.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreatePlayerSession",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Reserves an available game session slot for a player.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreatePlayerSessions",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Reserves available game session slots for multiple players.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateScript",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys"
            ],
            "dependent_actions": [],
            "description": "Creates a new Realtime Servers script.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateVpcPeeringAuthorization",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Allows GameLift to create or delete a peering connection between a GameLift fleet VPC and a VPC on another AWS account.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "CreateVpcPeeringConnection",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Establishes a peering connection between your GameLift fleet VPC and a VPC on another account.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeleteAlias",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Deletes an alias.",
            "permission_only": false,
            "resources": [
                {
                    "name": "alias",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteBuild",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Deletes a game build.",
            "permission_only": false,
            "resources": [
                {
                    "name": "build",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteFleet",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Deletes an empty fleet.",
            "permission_only": false,
            "resources": [
                {
                    "name": "fleet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteGameServerGroup",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Permanently deletes a game server group and terminates FleetIQ activity for the corresponding Auto Scaling group.",
            "permission_only": false,
            "resources": [
                {
                    "name": "gameServerGroup",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteGameSessionQueue",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Deletes an existing game session queue.",
            "permission_only": false,
            "resources": [
                {
                    "name": "gameSessionQueue",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteMatchmakingConfiguration",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Deletes an existing FlexMatch matchmaker.",
            "permission_only": false,
            "resources": [
                {
                    "name": "matchmakingConfiguration",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteMatchmakingRuleSet",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Deletes an existing FlexMatch matchmaking rule set.",
            "permission_only": false,
            "resources": [
                {
                    "name": "matchmakingRuleSet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteScalingPolicy",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Deletes a set of auto-scaling rules.",
            "permission_only": false,
            "resources": [
                {
                    "name": "fleet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteScript",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Deletes a Realtime Servers script.",
            "permission_only": false,
            "resources": [
                {
                    "name": "script",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteVpcPeeringAuthorization",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Cancels a VPC peering authorization.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeleteVpcPeeringConnection",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Removes a peering connection between VPCs.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeregisterGameServer",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Removes a game server from a game server group.",
            "permission_only": false,
            "resources": [
                {
                    "name": "gameServerGroup",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "DescribeAlias",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves properties for an alias.",
            "permission_only": false,
            "resources": [
                {
                    "name": "alias",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "DescribeBuild",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves properties for a game build.",
            "permission_only": false,
            "resources": [
                {
                    "name": "build",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "DescribeEC2InstanceLimits",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves the maximum allowed and current usage for EC2 instance types.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeFleetAttributes",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves general properties, including status, for fleets.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeFleetCapacity",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves the current capacity setting for fleets.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeFleetEvents",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves entries from a fleet's event log.",
            "permission_only": false,
            "resources": [
                {
                    "name": "fleet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "DescribeFleetPortSettings",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves the inbound connection permissions for a fleet.",
            "permission_only": false,
            "resources": [
                {
                    "name": "fleet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "DescribeFleetUtilization",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves utilization statistics for fleets.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeGameServer",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves properties for a game server.",
            "permission_only": false,
            "resources": [
                {
                    "name": "gameServerGroup",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "DescribeGameServerGroup",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves properties for a game server group.",
            "permission_only": false,
            "resources": [
                {
                    "name": "gameServerGroup",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "DescribeGameServerInstances",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves the status of EC2 instances in a game server group.",
            "permission_only": false,
            "resources": [
                {
                    "name": "gameServerGroup",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "DescribeGameSessionDetails",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves properties for game sessions in a fleet, including the protection policy.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeGameSessionPlacement",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves details of a game session placement request.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeGameSessionQueues",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves properties for game session queues.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeGameSessions",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves properties for game sessions in a fleet.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeInstances",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves information about instances in a fleet.",
            "permission_only": false,
            "resources": [
                {
                    "name": "fleet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "DescribeMatchmaking",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves details of matchmaking tickets.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeMatchmakingConfigurations",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves properties for FlexMatch matchmakers.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeMatchmakingRuleSets",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves properties for FlexMatch matchmaking rule sets.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribePlayerSessions",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves properties for player sessions in a game session.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeRuntimeConfiguration",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves the current runtime configuration for a fleet.",
            "permission_only": false,
            "resources": [
                {
                    "name": "fleet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "DescribeScalingPolicies",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves all scaling policies that are applied to a fleet.",
            "permission_only": false,
            "resources": [
                {
                    "name": "fleet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "DescribeScript",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves properties for a Realtime Servers script.",
            "permission_only": false,
            "resources": [
                {
                    "name": "script",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "DescribeVpcPeeringAuthorizations",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves valid VPC peering authorizations.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "DescribeVpcPeeringConnections",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves details on active or pending VPC peering connections.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "GetGameSessionLogUrl",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves the location of stored logs for a game session.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "GetInstanceAccess",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Requests remote access to a specified fleet instance.",
            "permission_only": false,
            "resources": [
                {
                    "name": "fleet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "List",
            "action": "ListAliases",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves all aliases that are defined in the current region.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "ListBuilds",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves all game build in the current region.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "ListFleets",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves a list of fleet IDs for all fleets in the current region.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "ListGameServerGroups",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves all game server groups that are defined in the current region.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "ListGameServers",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves all game servers that are currently running in a game server group.",
            "permission_only": false,
            "resources": [
                {
                    "name": "gameServerGroup",
                    "required": true
                }
            ]
        },
        {
            "access_level": "List",
            "action": "ListScripts",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves properties for all Realtime Servers scripts in the current region.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "ListTagsForResource",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Lists tags for GameLift resources",
            "permission_only": false,
            "resources": [
                {
                    "name": "alias",
                    "required": false
                },
                {
                    "name": "build",
                    "required": false
                },
                {
                    "name": "fleet",
                    "required": false
                },
                {
                    "name": "gameServerGroup",
                    "required": false
                },
                {
                    "name": "gameSessionQueue",
                    "required": false
                },
                {
                    "name": "matchmakingConfiguration",
                    "required": false
                },
                {
                    "name": "matchmakingRuleSet",
                    "required": false
                },
                {
                    "name": "script",
                    "required": false
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "PutScalingPolicy",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Creates or updates a fleet auto-scaling policy.",
            "permission_only": false,
            "resources": [
                {
                    "name": "fleet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "RegisterGameServer",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Notifies GameLift FleetIQ when a new game server is ready to host gameplay.",
            "permission_only": false,
            "resources": [
                {
                    "name": "gameServerGroup",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "RequestUploadCredentials",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves fresh upload credentials to use when uploading a new game build.",
            "permission_only": false,
            "resources": [
                {
                    "name": "build",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "ResolveAlias",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves the fleet ID associated with an alias.",
            "permission_only": false,
            "resources": [
                {
                    "name": "alias",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ResumeGameServerGroup",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Reinstates suspended FleetIQ activity for a game server group.",
            "permission_only": false,
            "resources": [
                {
                    "name": "gameServerGroup",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "SearchGameSessions",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Retrieves game sessions that match a set of search criteria.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "StartFleetActions",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Resumes auto-scaling activity on a fleet after it was suspended with StopFleetActions().",
            "permission_only": false,
            "resources": [
                {
                    "name": "fleet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "StartGameSessionPlacement",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Sends a game session placement request to a game session queue.",
            "permission_only": false,
            "resources": [
                {
                    "name": "gameSessionQueue",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "StartMatchBackfill",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Requests FlexMatch matchmaking to fill available player slots in an existing game session.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "StartMatchmaking",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Requests FlexMatch matchmaking for one or a group of players and game session placement for a resulting match.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "StopFleetActions",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Suspends auto-scaling activity on a fleet.",
            "permission_only": false,
            "resources": [
                {
                    "name": "fleet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "StopGameSessionPlacement",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Cancels a game session placement request that is in progress.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "StopMatchmaking",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Cancels a matchmaking or match backfill request that is in progress.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "SuspendGameServerGroup",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Temporarily stops FleetIQ activity for a game server group.",
            "permission_only": false,
            "resources": [
                {
                    "name": "gameServerGroup",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Tagging",
            "action": "TagResource",
            "condition_keys": [
                "aws:RequestTag/${TagKey}",
                "aws:TagKeys"
            ],
            "dependent_actions": [],
            "description": "Tags GameLift resources",
            "permission_only": false,
            "resources": [
                {
                    "name": "alias",
                    "required": false
                },
                {
                    "name": "build",
                    "required": false
                },
                {
                    "name": "fleet",
                    "required": false
                },
                {
                    "name": "gameServerGroup",
                    "required": false
                },
                {
                    "name": "gameSessionQueue",
                    "required": false
                },
                {
                    "name": "matchmakingConfiguration",
                    "required": false
                },
                {
                    "name": "matchmakingRuleSet",
                    "required": false
                },
                {
                    "name": "script",
                    "required": false
                }
            ]
        },
        {
            "access_level": "Tagging",
            "action": "UntagResource",
            "condition_keys": [
                "aws:TagKeys"
            ],
            "dependent_actions": [],
            "description": "Untags GameLift resources",
            "permission_only": false,
            "resources": [
                {
                    "name": "alias",
                    "required": false
                },
                {
                    "name": "build",
                    "required": false
                },
                {
                    "name": "fleet",
                    "required": false
                },
                {
                    "name": "gameServerGroup",
                    "required": false
                },
                {
                    "name": "gameSessionQueue",
                    "required": false
                },
                {
                    "name": "matchmakingConfiguration",
                    "required": false
                },
                {
                    "name": "matchmakingRuleSet",
                    "required": false
                },
                {
                    "name": "script",
                    "required": false
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "UpdateAlias",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Updates the properties of an existing alias.",
            "permission_only": false,
            "resources": [
                {
                    "name": "alias",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "UpdateBuild",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Updates an existing build's metadata.",
            "permission_only": false,
            "resources": [
                {
                    "name": "build",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "UpdateFleetAttributes",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Updates the general properties of an existing fleet.",
            "permission_only": false,
            "resources": [
                {
                    "name": "fleet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "UpdateFleetCapacity",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Adjusts a fleet's capacity settings.",
            "permission_only": false,
            "resources": [
                {
                    "name": "fleet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "UpdateFleetPortSettings",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Adjusts a fleet's port settings.",
            "permission_only": false,
            "resources": [
                {
                    "name": "fleet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "UpdateGameServer",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Changes game server properties, health status, or utilization status.",
            "permission_only": false,
            "resources": [
                {
                    "name": "gameServerGroup",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "UpdateGameServerGroup",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Updates properties for game server group, including allowed instance types.",
            "permission_only": false,
            "resources": [
                {
                    "name": "gameServerGroup",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "UpdateGameSession",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Updates the properties of an existing game session.",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "UpdateGameSessionQueue",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Updates properties of an existing game session queue.",
            "permission_only": false,
            "resources": [
                {
                    "name": "gameSessionQueue",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "UpdateMatchmakingConfiguration",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Updates properties of an existing FlexMatch matchmaking configuration.",
            "permission_only": false,
            "resources": [
                {
                    "name": "matchmakingConfiguration",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "UpdateRuntimeConfiguration",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Updates how server processes are configured on instances in an existing fleet.",
            "permission_only": false,
            "resources": [
                {
                    "name": "fleet",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "UpdateScript",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Updates the metadata and content of an existing Realtime Servers script.",
            "permission_only": false,
            "resources": [
                {
                    "name": "script",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "ValidateMatchmakingRuleSet",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Validates the syntax of a FlexMatch matchmaking rule set.",
            "permission_only": false,
            "resources": []
        }
    ],
    "prefix": "gamelift",
    "service": "Amazon GameLift"
}