{
    "actions": [
        {
            "access_level": "Write",
            "action": "AbortMultipartUpload",
            "condition_keys": [
                "s3:DataAccessPointArn",
                "s3:DataAccessPointAccount",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to abort a multipart upload",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Permissions management",
            "action": "BypassGovernanceRetention",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:RequestObjectTag/<key>",
                "s3:RequestObjectTagKeys",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-acl",
                "s3:x-amz-content-sha256",
                "s3:x-amz-copy-source",
                "s3:x-amz-grant-full-control",
                "s3:x-amz-grant-read",
                "s3:x-amz-grant-read-acp",
                "s3:x-amz-grant-write",
                "s3:x-amz-grant-write-acp",
                "s3:x-amz-metadata-directive",
                "s3:x-amz-server-side-encryption",
                "s3:x-amz-server-side-encryption-aws-kms-key-id",
                "s3:x-amz-storage-class",
                "s3:x-amz-website-redirect-location",
                "s3:object-lock-mode",
                "s3:object-lock-retain-until-date",
                "s3:object-lock-remaining-retention-days",
                "s3:object-lock-legal-hold"
            ],
            "dependent_actions": [],
            "description": "Grants permission to allow circumvention of governance-mode object retention settings",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateAccessPoint",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:locationconstraint",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-acl",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a new access point",
            "permission_only": false,
            "resources": [
                {
                    "name": "accesspoint",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateBucket",
            "condition_keys": [
                "s3:authType",
                "s3:locationconstraint",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-acl",
                "s3:x-amz-content-sha256",
                "s3:x-amz-grant-full-control",
                "s3:x-amz-grant-read",
                "s3:x-amz-grant-read-acp",
                "s3:x-amz-grant-write",
                "s3:x-amz-grant-write-acp"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a new bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "CreateJob",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256",
                "s3:RequestJobPriority",
                "s3:RequestJobOperation",
                "aws:TagKeys",
                "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [
                "iam:PassRole"
            ],
            "description": "Grants permission to create a new Amazon S3 Batch Operations job",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "DeleteAccessPoint",
            "condition_keys": [
                "s3:DataAccessPointArn",
                "s3:DataAccessPointAccount",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete the access point named in the URI",
            "permission_only": false,
            "resources": [
                {
                    "name": "accesspoint",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Permissions management",
            "action": "DeleteAccessPointPolicy",
            "condition_keys": [
                "s3:DataAccessPointArn",
                "s3:DataAccessPointAccount",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete the policy on a specified access point",
            "permission_only": false,
            "resources": [
                {
                    "name": "accesspoint",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteBucket",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete the bucket named in the URI",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Permissions management",
            "action": "DeleteBucketPolicy",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to delete the policy on a specified bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteBucketWebsite",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to remove the website configuration for a bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Tagging",
            "action": "DeleteJobTagging",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256",
                "s3:ExistingJobPriority",
                "s3:ExistingJobOperation"
            ],
            "dependent_actions": [],
            "description": "Grants permission to remove tags from an existing Amazon S3 Batch Operations job",
            "permission_only": false,
            "resources": [
                {
                    "name": "job",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteObject",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to remove the null version of an object and insert a delete marker, which becomes the current version of the object",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Tagging",
            "action": "DeleteObjectTagging",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:ExistingObjectTag/<key>",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to use the tagging subresource to remove the entire tag set from the specified object",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "DeleteObjectVersion",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:versionid",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to remove a specific version of an object",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Tagging",
            "action": "DeleteObjectVersionTagging",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:ExistingObjectTag/<key>",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:versionid",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to remove the entire tag set for a specific version of the object",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "DescribeJob",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to retrieve the configuration parameters and status for a batch operations job",
            "permission_only": false,
            "resources": [
                {
                    "name": "job",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetAccelerateConfiguration",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to uses the accelerate subresource to return the Transfer Acceleration state of a bucket, which is either Enabled or Suspended",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetAccessPoint",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return configuration information about the specified access point",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "GetAccessPointPolicy",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to returns the access point policy associated with the specified access point",
            "permission_only": false,
            "resources": [
                {
                    "name": "accesspoint",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetAccessPointPolicyStatus",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return the policy status for a specific access point policy",
            "permission_only": false,
            "resources": [
                {
                    "name": "accesspoint",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetAccountPublicAccessBlock",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to retrieve the PublicAccessBlock configuration for an AWS account",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "GetAnalyticsConfiguration",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to get an analytics configuration from an Amazon S3 bucket, identified by the analytics configuration ID",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetBucketAcl",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to use the acl subresource to return the access control list (ACL) of an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetBucketCORS",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return the CORS configuration information set for an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetBucketLocation",
            "condition_keys": [],
            "dependent_actions": [],
            "description": "Grants permission to return the Region that an Amazon S3 bucket resides in",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetBucketLogging",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return the logging status of an Amazon S3 bucket and the permissions users have to view or modify that status",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetBucketNotification",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to get the notification configuration of an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetBucketObjectLockConfiguration",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion"
            ],
            "dependent_actions": [],
            "description": "Grants permission to get the Object Lock configuration of an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetBucketPolicy",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return the policy of the specified bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetBucketPolicyStatus",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to retrieve the policy status for a specific Amazon S3 bucket, which indicates whether the bucket is public",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetBucketPublicAccessBlock",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to retrieve the PublicAccessBlock configuration for an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetBucketRequestPayment",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return the request payment configuration for an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetBucketTagging",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return the tag set associated with an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetBucketVersioning",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return the versioning state of an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetBucketWebsite",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return the website configuration for an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetEncryptionConfiguration",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return the default encryption configuration an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetInventoryConfiguration",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return an inventory configuration from an Amazon S3 bucket, identified by the inventory configuration ID",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetJobTagging",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return the tag set of an existing Amazon S3 Batch Operations job",
            "permission_only": false,
            "resources": [
                {
                    "name": "job",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetLifecycleConfiguration",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return the lifecycle configuration information set on an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetMetricsConfiguration",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to get a metrics configuration from an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetObject",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:ExistingObjectTag/<key>",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to retrieve objects from Amazon S3",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetObjectAcl",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:ExistingObjectTag/<key>",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return the access control list (ACL) of an object",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetObjectLegalHold",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to get an object's current Legal Hold status",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetObjectRetention",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to retrieve the retention settings for an object",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetObjectTagging",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:ExistingObjectTag/<key>",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return the tag set of an object",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetObjectTorrent",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return torrent files from an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetObjectVersion",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:ExistingObjectTag/<key>",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:versionid",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to retrieve a specific version of an object",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetObjectVersionAcl",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:ExistingObjectTag/<key>",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:versionid",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return the access control list (ACL) of a specific object version",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetObjectVersionForReplication",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to replicate both unencrypted objects and objects encrypted with SSE-S3 or SSE-KMS",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetObjectVersionTagging",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:ExistingObjectTag/<key>",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:versionid",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to return the tag set for a specific version of the object",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetObjectVersionTorrent",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:versionid",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to get Torrent files about a different version using the versionId subresource",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "GetReplicationConfiguration",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to get the replication configuration information set on an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "ListAccessPoints",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to list access points",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "ListAllMyBuckets",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to list all buckets owned by the authenticated sender of the request",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "List",
            "action": "ListBucket",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:delimiter",
                "s3:max-keys",
                "s3:prefix",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to list some or all of the objects in an Amazon S3 bucket (up to 1000)",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "ListBucketMultipartUploads",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to list in-progress multipart uploads",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "ListBucketVersions",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:delimiter",
                "s3:max-keys",
                "s3:prefix",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to list metadata about all the versions of objects in an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Read",
            "action": "ListJobs",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to list current jobs and jobs that have ended recently",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Read",
            "action": "ListMultipartUploadParts",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to list the parts that have been uploaded for a specific multipart upload",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Permissions management",
            "action": "ObjectOwnerOverrideToBucketOwner",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to change replica ownership",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "PutAccelerateConfiguration",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to use the accelerate subresource to set the Transfer Acceleration state of an existing S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Permissions management",
            "action": "PutAccessPointPolicy",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to associate an access policy with a specified access point",
            "permission_only": false,
            "resources": [
                {
                    "name": "accesspoint",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Permissions management",
            "action": "PutAccountPublicAccessBlock",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create or modify the PublicAccessBlock configuration for an AWS account",
            "permission_only": false,
            "resources": []
        },
        {
            "access_level": "Write",
            "action": "PutAnalyticsConfiguration",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to set an analytics configuration for the bucket, specified by the analytics configuration ID",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Permissions management",
            "action": "PutBucketAcl",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-acl",
                "s3:x-amz-content-sha256",
                "s3:x-amz-grant-full-control",
                "s3:x-amz-grant-read",
                "s3:x-amz-grant-read-acp",
                "s3:x-amz-grant-write",
                "s3:x-amz-grant-write-acp"
            ],
            "dependent_actions": [],
            "description": "Grants permission to set the permissions on an existing bucket using access control lists (ACLs)",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "PutBucketCORS",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to set the CORS configuration for an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "PutBucketLogging",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to set the logging parameters for an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "PutBucketNotification",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to receive notifications when certain events happen in an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "PutBucketObjectLockConfiguration",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion"
            ],
            "dependent_actions": [],
            "description": "Grants permission to put Object Lock configuration on a specific bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Permissions management",
            "action": "PutBucketPolicy",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to add or replace a bucket policy on a bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Permissions management",
            "action": "PutBucketPublicAccessBlock",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create or modify the PublicAccessBlock configuration for a specific Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "PutBucketRequestPayment",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to set the request payment configuration of a bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Tagging",
            "action": "PutBucketTagging",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to add a set of tags to an existing Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "PutBucketVersioning",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to set the versioning state of an existing Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "PutBucketWebsite",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to set the configuration of the website that is specified in the website subresource",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "PutEncryptionConfiguration",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to set the encryption configuration for an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "PutInventoryConfiguration",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to add an inventory configuration to the bucket, identified by the inventory ID",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Tagging",
            "action": "PutJobTagging",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256",
                "s3:ExistingJobPriority",
                "s3:ExistingJobOperation",
                "aws:TagKeys",
                "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "description": "Grants permission to replace tags on an existing Amazon S3 Batch Operations job",
            "permission_only": false,
            "resources": [
                {
                    "name": "job",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "PutLifecycleConfiguration",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to create a new lifecycle configuration for the bucket or replace an existing lifecycle configuration",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "PutMetricsConfiguration",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to set or update a metrics configuration for the CloudWatch request metrics from an Amazon S3 bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "PutObject",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:RequestObjectTag/<key>",
                "s3:RequestObjectTagKeys",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-acl",
                "s3:x-amz-content-sha256",
                "s3:x-amz-copy-source",
                "s3:x-amz-grant-full-control",
                "s3:x-amz-grant-read",
                "s3:x-amz-grant-read-acp",
                "s3:x-amz-grant-write",
                "s3:x-amz-grant-write-acp",
                "s3:x-amz-metadata-directive",
                "s3:x-amz-server-side-encryption",
                "s3:x-amz-server-side-encryption-aws-kms-key-id",
                "s3:x-amz-storage-class",
                "s3:x-amz-website-redirect-location",
                "s3:object-lock-mode",
                "s3:object-lock-retain-until-date",
                "s3:object-lock-remaining-retention-days",
                "s3:object-lock-legal-hold"
            ],
            "dependent_actions": [],
            "description": "Grants permission to add an object to a bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Permissions management",
            "action": "PutObjectAcl",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:ExistingObjectTag/<key>",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-acl",
                "s3:x-amz-content-sha256",
                "s3:x-amz-grant-full-control",
                "s3:x-amz-grant-read",
                "s3:x-amz-grant-read-acp",
                "s3:x-amz-grant-write",
                "s3:x-amz-grant-write-acp",
                "s3:x-amz-storage-class"
            ],
            "dependent_actions": [],
            "description": "Grants permission to set the access control list (ACL) permissions for an object that already exists in a bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "PutObjectLegalHold",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256",
                "s3:object-lock-legal-hold"
            ],
            "dependent_actions": [],
            "description": "Grants permission to apply a Legal Hold configuration to the specified object",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "PutObjectRetention",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256",
                "s3:object-lock-mode",
                "s3:object-lock-retain-until-date",
                "s3:object-lock-remaining-retention-days"
            ],
            "dependent_actions": [],
            "description": "Grants permission to place an Object Retention configuration on an object",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Tagging",
            "action": "PutObjectTagging",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:ExistingObjectTag/<key>",
                "s3:RequestObjectTag/<key>",
                "s3:RequestObjectTagKeys",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to set the supplied tag-set to an object that already exists in a bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Permissions management",
            "action": "PutObjectVersionAcl",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:ExistingObjectTag/<key>",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:versionid",
                "s3:x-amz-acl",
                "s3:x-amz-content-sha256",
                "s3:x-amz-grant-full-control",
                "s3:x-amz-grant-read",
                "s3:x-amz-grant-read-acp",
                "s3:x-amz-grant-write",
                "s3:x-amz-grant-write-acp",
                "s3:x-amz-storage-class"
            ],
            "dependent_actions": [],
            "description": "Grants permission to use the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Tagging",
            "action": "PutObjectVersionTagging",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:ExistingObjectTag/<key>",
                "s3:RequestObjectTag/<key>",
                "s3:RequestObjectTagKeys",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:versionid",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to set the supplied tag-set for a specific version of an object",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "PutReplicationConfiguration",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [
                "iam:PassRole"
            ],
            "description": "Grants permission to create a new replication configuration or replace an existing one",
            "permission_only": false,
            "resources": [
                {
                    "name": "bucket",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ReplicateDelete",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to replicate delete markers to the destination bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "ReplicateObject",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256",
                "s3:x-amz-server-side-encryption",
                "s3:x-amz-server-side-encryption-aws-kms-key-id"
            ],
            "dependent_actions": [],
            "description": "Grants permission to replicate objects and object tags to the destination bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Tagging",
            "action": "ReplicateTags",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to replicate object tags to the destination bucket",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "RestoreObject",
            "condition_keys": [
                "s3:DataAccessPointAccount",
                "s3:DataAccessPointArn",
                "s3:AccessPointNetworkOrigin",
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "description": "Grants permission to restore an archived copy of an object back into Amazon S3",
            "permission_only": false,
            "resources": [
                {
                    "name": "object",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "UpdateJobPriority",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256",
                "s3:RequestJobPriority",
                "s3:ExistingJobPriority",
                "s3:ExistingJobOperation"
            ],
            "dependent_actions": [],
            "description": "Grants permission to update the priority of an existing job",
            "permission_only": false,
            "resources": [
                {
                    "name": "job",
                    "required": true
                }
            ]
        },
        {
            "access_level": "Write",
            "action": "UpdateJobStatus",
            "condition_keys": [
                "s3:authType",
                "s3:signatureAge",
                "s3:signatureversion",
                "s3:x-amz-content-sha256",
                "s3:ExistingJobPriority",
                "s3:ExistingJobOperation",
                "s3:JobSuspendedCause"
            ],
            "dependent_actions": [],
            "description": "Grants permission to update the status for the specified job",
            "permission_only": false,
            "resources": [
                {
                    "name": "job",
                    "required": true
                }
            ]
        }
    ],
    "prefix": "s3",
    "service": "Amazon S3"
}